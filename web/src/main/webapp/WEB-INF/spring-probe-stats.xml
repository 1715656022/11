<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed under the GPL License. You may not use this file except in compliance with the License.
    You may obtain a copy of the License at

      https://www.gnu.org/licenses/old-licenses/gpl-2.0.html

    THIS PACKAGE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
    WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR
    PURPOSE.

-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="psiprobe" />

	<!--
		Get spring to call method collect() on the "connectorStatsCollector", making the latter a Job
	-->
	<bean id="connectorStatsJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="connectorStatsCollector"/>
		<property name="targetMethod" value="collect"/>
		<property name="concurrent" value="false"/>
	</bean>

	<bean id="clusterStatsJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="clusterStatsCollector"/>
		<property name="targetMethod" value="collect"/>
		<property name="concurrent" value="false"/>
	</bean>

	<bean id="memoryStatsJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="memoryStatsCollector"/>
		<property name="targetMethod" value="collect"/>
		<property name="concurrent" value="false"/>
	</bean>

	<bean id="runtimeStatsJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="runtimeStatsCollector"/>
		<property name="targetMethod" value="collect"/>
		<property name="concurrent" value="false"/>
	</bean>

	<bean id="appStatsJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="appStatsCollector"/>
		<property name="targetMethod" value="collect"/>
		<property name="concurrent" value="false"/>
	</bean>

	<bean id="datasourceStatsJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="datasourceStatsCollector"/>
		<property name="targetMethod" value="collect"/>
		<property name="concurrent" value="false"/>
	</bean>

	<bean id="statsSerializerJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="statsCollection"/>
		<property name="targetMethod" value="serialize"/>
		<property name="concurrent" value="false"/>
	</bean>

	<bean id="connectorStatsTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="connectorStatsJobDetail"/>
		<property name="cronExpression">
			<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
				<property name="targetClass" value="psiprobe.tools.TimeExpression" />
				<property name="targetMethod" value="cronExpression" />
				<property name="arguments">
					<list>
						<value>${psiprobe.beans.stats.collectors.connector.period}</value>
						<value>${psiprobe.beans.stats.collectors.connector.phase}</value>
					</list>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="clusterStatsTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="clusterStatsJobDetail"/>
		<property name="cronExpression">
			<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
				<property name="targetClass" value="psiprobe.tools.TimeExpression" />
				<property name="targetMethod" value="cronExpression" />
				<property name="arguments">
					<list>
						<value>${psiprobe.beans.stats.collectors.cluster.period}</value>
						<value>${psiprobe.beans.stats.collectors.cluster.phase}</value>
					</list>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="memoryStatsTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="memoryStatsJobDetail"/>
		<property name="cronExpression">
			<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
				<property name="targetClass" value="psiprobe.tools.TimeExpression" />
				<property name="targetMethod" value="cronExpression" />
				<property name="arguments">
					<list>
						<value>${psiprobe.beans.stats.collectors.memory.period}</value>
						<value>${psiprobe.beans.stats.collectors.memory.phase}</value>
					</list>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="runtimeStatsTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="runtimeStatsJobDetail"/>
		<property name="cronExpression">
			<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
				<property name="targetClass" value="psiprobe.tools.TimeExpression" />
				<property name="targetMethod" value="cronExpression" />
				<property name="arguments">
					<list>
						<value>${psiprobe.beans.stats.collectors.runtime.period}</value>
						<value>${psiprobe.beans.stats.collectors.runtime.phase}</value>
					</list>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="appStatsTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="appStatsJobDetail"/>
		<property name="cronExpression">
			<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
				<property name="targetClass" value="psiprobe.tools.TimeExpression" />
				<property name="targetMethod" value="cronExpression" />
				<property name="arguments">
					<list>
						<value>${psiprobe.beans.stats.collectors.app.period}</value>
						<value>${psiprobe.beans.stats.collectors.app.phase}</value>
					</list>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="datasourceStatsTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="datasourceStatsJobDetail"/>
		<property name="cronExpression">
			<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
				<property name="targetClass" value="psiprobe.tools.TimeExpression" />
				<property name="targetMethod" value="cronExpression" />
				<property name="arguments">
					<list>
						<value>${psiprobe.beans.stats.collectors.datasource.period}</value>
						<value>${psiprobe.beans.stats.collectors.datasource.phase}</value>
					</list>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="statsSerializerTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="statsSerializerJobDetail"/>
		<property name="cronExpression">
			<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
				<property name="targetClass" value="psiprobe.tools.TimeExpression" />
				<property name="targetMethod" value="cronExpression" />
				<property name="arguments">
					<list>
						<value>${psiprobe.beans.stats.serializer.period}</value>
						<value>${psiprobe.beans.stats.serializer.phase}</value>
					</list>
				</property>
			</bean>
		</property>
	</bean>


	<bean name="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="connectorStatsTrigger"/>
				<ref bean="clusterStatsTrigger"/>
				<ref bean="memoryStatsTrigger"/>
				<ref bean="runtimeStatsTrigger"/>
				<ref bean="appStatsTrigger"/>
				<ref bean="datasourceStatsTrigger"/>
				<ref bean="statsSerializerTrigger"/>
			</list>
		</property>
		<property name="quartzProperties">
			<map>
				<entry key="org.quartz.scheduler.instanceName" value="ProbeScheduler" />
				<entry key="org.quartz.scheduler.skipUpdateCheck" value="true" />
				<entry key="org.quartz.threadPool.threadCount" value="5" />
				<entry key="org.quartz.threadPool.threadNamePrefix" value="Probe_Quartz" />
			</map>
		</property>
	</bean>
</beans>
